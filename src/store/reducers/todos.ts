import { handleActions } from 'redux-actions';
import { TodosActions } from '../actions';
import { ITodo, ITodos } from '../../types';

let count = 0;
const initialState: ITodos = [
  {
    id: '',
    title: 'Javascript',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'ES6+',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Typescript',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'NodeJS',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Semver',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'WebSocket',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Rest API',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'JSON',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Microservices architecture',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'gRPC',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Protobuf',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Git',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'BunnyCDN',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Google Cloud',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'FFmpeg',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Cuda',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'WebRTC',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'RTMP',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'HLS',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'MPEG-DASH',
    columnId: 'column-1',
    isDone: false,
  },
  {
    id: '',
    title: 'Axios',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Webpack',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Ava/Mocha/Chai/JEST',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Lodash',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Underscore',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Ramda',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Date-fns',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Mongoose',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Express',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Moment.js',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'JWT',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Socket.io',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'ZeroMQ',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Sequalize',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'TypeORM',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Swagger',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Sentry',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Redux',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Redux-thunk',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Redux-saga',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Pino',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Knex',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Bignumber',
    columnId: 'column-2',
    isDone: false,
  },
  {
    id: '',
    title: 'Vue.js',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Nuxt.js',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Angular 9',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'React',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Next.js',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Pug',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'SCSS/SASS',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Babel',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Gulp',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Zeit',
    columnId: 'column-3',
    isDone: false,
  },
  {
    id: '',
    title: 'Nest.js',
    columnId: 'column-4',
    isDone: false,
  },
  {
    id: '',
    title: 'GraphQL',
    columnId: 'column-4',
    isDone: false,
  },
  {
    id: '',
    title: 'RabbitMQ',
    columnId: 'column-4',
    isDone: false,
  },
  {
    id: '',
    title: 'PostgreSQL',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'MongoDB',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'Redis',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'InfluxDB',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'ElasticSearch',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'Cassandra',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'TimescaleDB',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'ClickHouse',
    columnId: 'column-5',
    isDone: false,
  },
  {
    id: '',
    title: 'Linux',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Bash',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Docker',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Docker-compose',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Portainer',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Buildkite',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'TeamCity',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Nginx',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Envoy',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Chronograf',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Telegraf',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Prometheus',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Nodeexporter',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Grafana',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Launchdarky',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'Firewall',
    columnId: 'column-6',
    isDone: false,
  },
  {
    id: '',
    title: 'npm',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'RxJS',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'Insomnia',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'Jira',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'Confluence',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'Slack',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'Hyper',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'Gitkraken',
    columnId: 'column-7',
    isDone: false,
  },
  {
    id: '',
    title: 'WebStorm',
    columnId: 'column-7',
    isDone: false,
  },
].map((el) => ({ ...el, id: `todo-${(count += 1).toString()}` }));

export const TodosReducer = handleActions<ITodos, any>({
  [TodosActions.Type.SET_TODOS]:
        (state, action) => ([...action.payload]),
  [TodosActions.Type.UPDATE_TITLE]:
      (state, action) => (state.map((todo: ITodo) => (todo.id === action.payload.id
        ? {
          ...todo,
          title: action.payload.title,
        }
        : todo))),
  [TodosActions.Type.UPDATE_DESCRIPTION]:
      (state, action) => (state.map((todo: ITodo) => (todo.id === action.payload.id
        ? {
          ...todo,
          description: action.payload.description,
        }
        : todo))),
  [TodosActions.Type.ADD]:
        (state, action) => ([...state, {
          id: Math.random().toString(),
          ...action.payload,
        }]),
}, initialState);
